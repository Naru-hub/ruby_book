# sliceメソッド([]のエイリアスメソッド)
text = '郵便番号は123-4567です'
puts text.slice(/\d{3}-\d{4}/)   #"123-4567"

text = '誕生日は1977年7月17日'
puts text.slice(/(\d+)年(\d+)月(\d+)日/,3)  #"17"

# slice!にするとマッチした部分が文字列から破壊的に取り除かれる
text = '郵便番号は123-4567です'
text.slice!(/\d{3}-\d{4}/)      #"123-4567"
puts text                       #"郵便番号はです"

# splitメソッド(splitに正規表現を渡すとマッチした文字列を区切り文字にして文字列を分解し配列として返す)
text = '123,456-789'
# 文字列で区切り文字を指定する
puts text.split(',')      #["123","456-789"]
puts text.split(/,|-/)    #["123", "456","789"]

# gsubメソッドを使うと、第1表現の正規表現にマッチした文字列を第2引数の文字列で置き換える
text = '123,456-789'
# 第1引数に文字列を渡すと、完全一致する文字列を第2引数で置き換える
puts text.gsub(',',':')     #123:456-789
# 正規表現を渡すと、マッチした部分を第2引数で置き換える
puts text.gsub(/,|-/,':')   #123:456:789

# キャプチャを使うと第2引数で\1や\2のようにしてキャプチャした文字列を連番で参照できます
text = '誕生日は1977年7月17日です'
puts text.gsub(/(\d+)年(\d+)月(\d+)日/,'\1-\2-\3')   #'誕生日は1977-7-17です'

# 名前付きキャプチャの場合は\k<name>のようにして参照できます
text = '誕生日は1977年7月17日です'
puts text.gsub(
  /(?<year>\d+)年(?<month>\d+)月(?<day>\d+)日/,
  '\k<year>-\k<month>-\k<day>'
)       #'誕生日は1977-7-17です'

# 第2引数にハッシュを渡して、変換のルールを指定することもできます
text = '123,456-789'
# カンマはコロンにハイフンはスラッシュに置き換える
 hash = {',' => ':','-' => '/'}
 puts text.gsub(/,|-/,hash)     #123:456/789

#  第2引数を渡す代わりにブロックの戻り値で置き換える文字列を指定することもできる
text = '123,456-789'
# カンマはコロンにそれ以外はスラッシュに置き換える
puts text.gsub(/,|-/){|matched|matched == ','?':':'/'}  #123:456/789
# gsub!メソッドは文字列の内容を破壊的に置換します
text = '123,456-789'
text.gsub!(/,|-/,':')
puts text    #123:456:789


